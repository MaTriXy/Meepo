apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "com.github.dcendents.android-maven"
apply plugin: "jacoco"

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    compileOnly "com.android.support:support-annotations:28.0.0"

    testImplementation "junit:junit:4.12"
    testImplementation "org.robolectric:robolectric:4.1"
    testImplementation "androidx.test:core:1.1.0"
    testImplementation "org.mockito:mockito-core:2.23.4"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.20"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testReleaseUnitTest") {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            "**/R.class",
            '**/R$*.class',
            "**/BuildConfig.*",
            "**/Manifest*.*",
            "**/*Test*.*",
            "android/**/*.*"
    ]
    def classTree = fileTree(dir: "${buildDir}/intermediates/javac", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([classTree])
    executionData = files("${buildDir}/jacoco/testReleaseUnitTest.exec")
}
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}
check.dependsOn jacocoTestReport

task androidSourcesJar(type: Jar) {
    classifier = "sources"
    baseName = archivesBaseName
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
}
